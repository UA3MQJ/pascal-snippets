{
	"scope": "source.pascal",
	"completions":
	[
		"pascal",

		{ "trigger": "uses", "contents": "uses" },		
		{ "trigger": "inc", "contents": "inc($1);" },		
		{ "trigger": "forward", "contents": "forward;" },		
		{ "trigger": "external", "contents": "external;" },		

		{ "trigger": "shortint", "contents": "shortint" },
		{ "trigger": "integer", "contents": "integer" },
		{ "trigger": "longint", "contents": "longint" },		
		{ "trigger": "byte", "contents": "byte" },		
		{ "trigger": "word", "contents": "word" },		
		{ "trigger": "longWord", "contents": "longWord" },		
		{ "trigger": "int64", "contents": "int64" },		
		{ "trigger": "qWord", "contents": "qWord" },		
		{ "trigger": "cardinal", "contents": "cardinal" },		
		
		{ "trigger": "boolean", "contents": "boolean" },		
		{ "trigger": "wordBool", "contents": "wordBool" },		
		{ "trigger": "longBool", "contents": "longBool" },		
		{ "trigger": "byteBool", "contents": "byteBool" },		
		
		{ "trigger": "real", "contents": "real" },		
		{ "trigger": "single", "contents": "single" },		
		{ "trigger": "double", "contents": "double" },		
		{ "trigger": "extended", "contents": "extended" },		
		{ "trigger": "comp", "contents": "comp" },		
		{ "trigger": "currency", "contents": "currency" },		
		
		{ "trigger": "string", "contents": "string" },		
		{ "trigger": "char", "contents": "char" },		
		{ "trigger": "const", "contents": "const" },		
		{ "trigger": "array", "contents": "array[${1:1}..$2] of ${integer}" },		

		{ "trigger": "length", "contents": "length($1)" },
		{ "trigger": "upcase", "contents": "upcase($1)" },
		{ "trigger": "lowercase", "contents": "lowercase($1)" },
		{ "trigger": "concat", "contents": "concat($1)" },
		{ "trigger": "delete", "contents": "delete(${1:string}, ${2:position}, ${3:n})" },
		{ "trigger": "insert", "contents": "insert(${1:string}, ${2:string}, ${3:position})" },
		{ "trigger": "copy", "contents": "copy(${1:string}, ${2:position}, ${3:n})" },
		{ "trigger": "pos", "contents": "pos(${1:what}, ${2:string})" },
		{ "trigger": "str", "contents": "str(${1:number}, ${2:string})" },
		{ "trigger": "val", "contents": "val(${1:string}, ${2:number}, ${3:errorcode})" },

		{ "trigger": "assign", "contents": "assign(${1:flowname}, '${2:filename.txt}')"},
		{ "trigger": "append", "contents": "append(${1:flowname})"},
		{ "trigger": "close", "contents": "close(${1:flowname})"},
		{ "trigger": "reset", "contents": "reset(${1:flowname})"},
		{ "trigger": "erase", "contents": "erase(${1:flowname})"},

		{ "trigger": "write", "contents": "write${1:ln}(${2:statement})" },
		{ "trigger": "read", "contents": "read${1:ln}(${2:statement})" },

		{ "trigger": "abs", "contents": "abs($1)" },
		{ "trigger": "sin", "contents": "sin($1)" },
		{ "trigger": "cos", "contents": "cos($1)" },
		{ "trigger": "arctan", "contents": "arctan($1)" },
		{ "trigger": "3.141593...", "contents": "pi" },
		{ "trigger": "exp", "contents": "exp($1)" },
		{ "trigger": "ln", "contents": "ln($1)" },
		{ "trigger": "sqr", "contents": "sqr($1)" },
		{ "trigger": "sqrt", "contents": "sqrt($1)" },
		{ "trigger": "int", "contents": "int($1)" },
		{ "trigger": "frac", "contents": "frac($1)" },
		{ "trigger": "round", "contents": "round($1)" },
		{ "trigger": "trunc", "contents": "trunc($1)" },
		{ "trigger": "ord", "contents": "ord($1)" },
		{ "trigger": "odd", "contents": "odd($1)" },
		{ "trigger": "dec", "contents": "dec($1)" },
		{ "trigger": "pred", "contents": "pred($1)" },
		{ "trigger": "succ", "contents": "succ($1)" },
		{ "trigger": "eof", "contents": "eof($1)" },
		{ "trigger": "eoln", "contents": "eoln($1)" },
		{ "trigger": "chr", "contents": "chr($1)" },
		{ "trigger": "exp", "contents": "exp(${1:n} * ln(${2:x}))" },

		{ "trigger": "randomize", "contents": "randomize" },
		{ "trigger": "random", "contents": "random($1)" },
		{ "trigger": "randomize", "contents": "randomize;" },
		{ "trigger": "with", "contents": "with $1 do\nbegin\n\t${2}\nend;" }
	]
}
